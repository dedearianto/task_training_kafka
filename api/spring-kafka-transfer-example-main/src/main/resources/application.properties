
####port
server.port=8181

#########Setting kafka

############topic
topic.name=activity
topic.name2=activity2
topic.trx=trx-topic

spring.kafka.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.valueSerializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8081
spring.kafka.consumer.group-id=activity-new
spring.kafka.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.valueDeserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.autoOffsetReset=earliest
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8081
spring.kafka.consumer.properties.specific.avro.reader=true

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.datasource.embedded-database-connection=derby
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyDialect


